/************************************************************
    GRUPO: 05   |  CURSO: L-IG
*  	UC: ADMINISTRAÇÃO E GESTÃO DE INFORMAÇÃO
*
*	PROJETO: RIDE-U   
*
*  	NOME: JOÃO RAMOS(20200255)
*  	NOME: MARTIM BENTO (20200488)
    NOME: PEDRO CUNHA (20200908)
*
************************************************************/
USE RIDEU
GO

/********************
*  SP PARA ATUALIZAR ESTATUTO
********************/
CREATE OR ALTER PROCEDURE SPATRIBUIRESTATUTO
AS BEGIN
DECLARE @CL_ID INT
DECLARE @AVCL_VIID INT	

DECLARE CUR_ATRIBUIR CURSOR FOR
SELECT CL_ID,COUNT(AVCL_VIID) FROM Scliente.CLIENTE C
INNER JOIN Scliente.CONDAVCL AV ON AV.AVCL_CLID = C.CL_ID
GROUP BY C.CL_ID

OPEN CUR_ATRIBUIR

FETCH NEXT FROM CUR_ATRIBUIR INTO @CL_ID,@AVCL_VIID
WHILE @@FETCH_STATUS=0
		BEGIN

			IF @AVCL_VIID = 1
				UPDATE DETER SET DETER_EST_ID=1 FROM DETER D	
				INNER JOIN scliente.CLIENTE CL ON D.DETER_CL_ID=CL.CL_ID
				WHERE CL.CL_ID=@CL_ID
		
			ELSE IF  @AVCL_VIID BETWEEN 2 AND 3
				UPDATE DETER SET DETER_EST_ID=2 FROM DETER D	
				INNER JOIN scliente.CLIENTE CL ON D.DETER_CL_ID=CL.CL_ID
				WHERE CL.CL_ID=@CL_ID

			ELSE IF @AVCL_VIID >= 4
				UPDATE DETER SET DETER_EST_ID=3 FROM DETER D	
				INNER JOIN scliente.CLIENTE CL ON D.DETER_CL_ID=CL.CL_ID
				WHERE CL.CL_ID=@CL_ID

			FETCH NEXT FROM CUR_ATRIBUIR INTO @CL_ID,@AVCL_VIID
		END
		
CLOSE CUR_ATRIBUIR
DEALLOCATE CUR_ATRIBUIR

END
GO

/****************************************
*  SP PARA CALCULAR AVALIACAO DO CONDUTOR
*****************************************/
CREATE OR ALTER PROCEDURE SPCALCULOAVALIACAOCOND
@CONID INT
AS BEGIN

SELECT C.CON_ID ,C.CON_NOME, ROUND(AVG(CL.AVCON_ESTRELAS),2) AS 'MEDIA' FROM Scondutor.CONDUTOR C 
INNER JOIN Scondutor.CLAVCOND CL ON CL.AVCON_ID=C.CON_ID
WHERE C.CON_ID=@CONID
GROUP BY C.CON_ID,C.CON_NOME

END
GO

EXEC SPCALCULOAVALIACAOCOND @CONID=1
GO
/****************************************
*  SP PARA CALCULAR AVALIACAO DO CLIENTE
*****************************************/

CREATE OR ALTER PROCEDURE SPCALCULOAVALIACAOCL
@CLID INT
AS BEGIN

SELECT C.CL_ID ,C.CL_NOME, ROUND(AVG(CL.AVCL_ESTRELAS),2) AS 'MEDIA' FROM Scliente.CLIENTE C 
INNER JOIN Scliente.CONDAVCL CL ON CL.AVCL_CLID=C.CL_ID
WHERE C.CL_ID=@CLID
GROUP BY C.CL_ID,C.CL_NOME

END
GO
--TEST
EXEC SPCALCULOAVALIACAOCL @CLID=1
SELECT * FROM Scliente.CLIENTE
GO
/********************************************************
*  SP'S REGISTAR CLIENTE
*********************************************************/
CREATE OR ALTER PROCEDURE SPREGISTARCL
	@DATANASC DATE,
    @NOME VARCHAR(21),
	@NOMEMEIO VARCHAR(21) ,
	@APELIDO VARCHAR(21),
	@GENERO CHAR(1),
	@TELEMOVEL INT

AS 
BEGIN
	DECLARE @CL_IDADE INT;
    SET @CL_IDADE =DATEDIFF(YEAR, @DATANASC, GETDATE());  --FLOOR(DATEDIFF(DAY, @DATANASC, GETDATE()) / 365.25)
    print(@cl_idade)

	IF @CL_IDADE between 18 and 120 and @NOME like '%[A-Z]%' AND @NOME NOT LIKE '%[0-9]%' and @NOME not like '% %' AND LEN(@NOME)<=20
		and @NOMEMEIO like '%[A-Z]%' and @NOMEMEIO NOT LIKE '%[0-9]%' AND LEN(@NOMEMEIO)<=20
		and @APELIDO LIKE '%[A-Z]%' AND @APELIDO NOT LIKE '%[0-9]%' and @apelido not like '% %' AND LEN(@APELIDO)<=20 
		and @GENERO like'%M%' OR @GENERO like'%F%' AND LEN(@TELEMOVEL)=9
		begin
			INSERT INTO Scliente.CLIENTE VALUES(@DATANASC,@NOME,@NOMEMEIO,@APELIDO,@GENERO,@TELEMOVEL)
		end
	ELSE
		begin
			RAISERROR('INSERT N INSERIDO',16 ,1)
		end	
END
GO

go
CREATE OR ALTER PROCEDURE SPREGISTARCLLOGIN
	
	@EMAIL VARCHAR(255) ,
	@PASSWORD VARCHAR(255)

AS 
BEGIN
	DECLARE @LAST INT
	SELECT @LAST=(SELECT TOP 1 CL_ID FROM Scliente.CLIENTE ORDER BY CL_ID DESC) ;
	IF @EMAIL  LIKE '%@%.%' AND LEN(@EMAIL)<255 and LEN(@PASSWORD)<255 and @PASSWORD not like '% %' and @EMAIL not like '% %'
		INSERT INTO Sanalista.CLLOGIN VALUES (@LAST,ENCRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'),CONVERT(VARCHAR,@EMAIL)),
		ENCRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'),CONVERT(VARCHAR,@PASSWORD)),NULL,DEFAULT)

    ELSE
		begin
			RAISERROR('INSERT N INSERIDO',16 ,1)
		end
END

GO

CREATE OR ALTER PROCEDURE SPREGISTARCL2FA  
 
    @SECRET VARCHAR(32)   
AS 
BEGIN
    DECLARE @LAST INT
    SELECT @LAST=(SELECT TOP 1 CLO_ID AS ID FROM Sanalista.CLLOGIN ORDER BY CLO_ID DESC) ;    
	UPDATE Sanalista.CLLOGIN SET CLO_SECRET=@SECRET
	WHERE CLO_ID=@LAST
END
GO	

CREATE OR ALTER PROCEDURE spRegistarMetPag 
    @ANO INT,
	@MES INT ,
	@NUMCARTAO VARCHAR(16),
	@CVV INT
AS 
BEGIN
	DECLARE @ANOATUAL INT
	
	SET @ANOATUAL=YEAR(GETDATE())

	IF  @numCartao LIKE '%[0-9]%' and @NUMCARTAO not like '%[A-Z]%' AND LEN(@numCartao) = 15 AND LEN(@cvv) =3 AND @mes >= 1 AND @mes <= 12 AND @ano>=@ANOATUAL
		INSERT INTO METPAGAMENTO VALUES(ENCRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'),CONVERT(VARCHAR,@ano))
		,ENCRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'),CONVERT(VARCHAR,@mes)),
		ENCRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'),CONVERT(VARCHAR,@numCartao)),
		ENCRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'),CONVERT(VARCHAR,@cvv)))
		
	ELSE
		RAISERROR('INSERT N INSERIDO',16 ,1)

END
BEGIN

	DECLARE @LAST INT
	DECLARE @LASTM INT
	DECLARE @DATE DATETIME
	SET @DATE=GETDATE()
	SELECT @LAST=(SELECT TOP 1 MET_ID FROM METPAGAMENTO ORDER BY MET_ID DESC) ;
	SELECT @LASTM=(SELECT TOP 1 CL_ID FROM Scliente.CLIENTE ORDER BY CL_ID DESC) ;
	INSERT INTO TER VALUES(@DATE,@LASTM,@LAST)

END

GO

/********************************************************
*  SP'S REGISTAR CONDUTOR
*********************************************************/
CREATE OR ALTER PROCEDURE SPREGISTARCON
	@DATANASC DATE,
	@GENERO CHAR(1),
	@CC INT,
    @NIF INT,
	@NOME VARCHAR(21) ,
	@NOMEMEIO VARCHAR(21) ,
	@APELIDO VARCHAR(21),
	@TELEMOVEL INT,
	@LICTRANSP INT

AS 
BEGIN
	DECLARE @CON_IDADE INT;
    SET @CON_IDADE = DATEDIFF(YEAR, @DATANASC, GETDATE());
    
	IF @CON_IDADE between 21 and 60 and @GENERO like'%M%' OR @GENERO like'%F%' 
		AND @NOME NOT LIKE '%[0-9]%' and @NOME not like '% %' AND @NOME like '%[A-Z]%'  AND LEN(@NOME)<=20
		and @NOMEMEIO like '%[A-Z]%' and @NOMEMEIO not like '% %'and @NOMEMEIO NOT LIKE '%[0-9]%' AND LEN(@NOMEMEIO)<=20
		and @APELIDO LIKE '%[A-Z]%' AND @APELIDO NOT LIKE '%[0-9]%' and @apelido not like '% %' AND LEN(@APELIDO)<=20 AND
		LEN(@CC) = 8 AND LEN(@NIF) = 9 AND LEN(@LICTRANSP)=6

		INSERT INTO Scondutor.CONDUTOR VALUES(@DATANASC,@GENERO,ENCRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'),
		CONVERT(VARCHAR,@CC)),ENCRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'),CONVERT(VARCHAR,@NIF)),@NOME,@NOMEMEIO,@APELIDO,@TELEMOVEL,
		ENCRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'),CONVERT(VARCHAR,@LICTRANSP)))
	ELSE
		THROW 51000, 'INSERT N INSERIDO', 1;
END

GO

CREATE OR ALTER PROCEDURE SPREGISTARCONLOGIN 
	
	@EMAIL VARCHAR(255) ,
	@PASSWORD VARCHAR(255)

AS 
BEGIN
	DECLARE @LAST INT
	SELECT @LAST=(SELECT TOP 1 CON_ID FROM Scondutor.CONDUTOR ORDER BY CON_ID DESC) ;
	IF @EMAIL LIKE '%@%._%' AND LEN(@EMAIL)<255 and LEN(@PASSWORD)<255 and @PASSWORD not like '% %' and @EMAIL not like '% %'
		INSERT INTO Sanalista.CONLOGIN VALUES(@LAST,ENCRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'),CONVERT(VARCHAR,@EMAIL)),
		ENCRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'),CONVERT(VARCHAR,@PASSWORD)),NULL,DEFAULT)
	ELSE
		THROW 51001, 'ERRO: A EMAIL INSERIDO É INVÁLIDO', 1;
END
GO

CREATE OR ALTER PROCEDURE SPREGISTARCON2FA  
 
    @SECRET VARCHAR(32)   
AS 
BEGIN
    DECLARE @LAST INT
    SELECT @LAST=(SELECT TOP 1 CO_ID AS ID FROM Sanalista.CONLOGIN ORDER BY CO_ID DESC) ;    
	UPDATE Sanalista.CONLOGIN SET CO_SECRET=@SECRET
	WHERE CO_ID=@LAST
END
GO	

CREATE OR ALTER PROCEDURE SPREGISTARCARTACOND
	@NUMERO VARCHAR(10),
	@DATAEMISSAO DATE
	
AS 
BEGIN
	DECLARE @CC_IDADE INT;
	DECLARE @LAST INT
	DECLARE @DATETIME DATETIME

	SET @DATETIME=GETDATE()
    SET @CC_IDADE = DATEDIFF(YEAR, @DATAEMISSAO, GETDATE());

	SELECT @LAST=(SELECT TOP 1 CON_ID FROM Scondutor.CONDUTOR ORDER BY CON_ID DESC) ;
    
	IF @CC_IDADE >= 3 AND @NUMERO NOT LIKE '%[A-Z]%' AND @NUMERO LIKE '%[0-9]%' AND @NUMERO NOT LIKE '% %' AND LEN(@NUMERO)=9
		INSERT INTO Sanalista.CARTACONDUCAO VALUES(ENCRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'),CONVERT(VARCHAR,@NUMERO)),@DATAEMISSAO,@LAST,@DATETIME)
	ELSE
		THROW 51002, 'ERRO: A CARTA DE CONDUÇÃO INSERIDA É INVÁLIDA', 1;
END
GO

GO

CREATE OR ALTER PROCEDURE SPREGISTARCARRO
	@MARCA VARCHAR(21),
	@COR VARCHAR(21),
	@COMBUSTIVEL VARCHAR(10),
	@MATRICULA VARCHAR(7),
	@LUGARES INT,
	@DATAREGISTO DATE,
	@MODELO VARCHAR(16),
	@DUA INT
	
AS 
BEGIN
	DECLARE @LAST INT
	DECLARE @DATETIME DATETIME
	SET @DATETIME=GETDATE()

	SELECT @LAST=(SELECT TOP 1 CC_CON_ID FROM Sanalista.CARTACONDUCAO ORDER BY CC_CON_ID DESC) ;

	IF @DUA LIKE '%[0-9]%' AND @DUA NOT LIKE '%[A-Z]%' AND @DUA NOT LIKE '% %' AND LEN(@DUA)<=9 
	AND @MARCA LIKE '%[A-Z]%' AND @MARCA NOT LIKE '%[0-9]%' AND @MARCA NOT LIKE '% %' AND LEN(@MARCA)<=20
	AND @COR LIKE '%[A-Z]%' AND @COR NOT LIKE '% %' AND @COR NOT LIKE '%[0-9]%' AND LEN(@COR)=20 AND LEN(@MATRICULA)=6
	AND @COMBUSTIVEL LIKE '%[A-Z]%' AND @COMBUSTIVEL NOT LIKE '%[0-9]%' AND @COMBUSTIVEL NOT LIKE '% %'
	AND @MODELO LIKE '%[A-Z]%' AND @MODELO NOT LIKE '%[0-9]%' AND @MODELO NOT LIKE '% %' AND LEN(@MODELO)<=15
	AND @COMBUSTIVEL='GASOLINA' OR @COMBUSTIVEL='ELETRICO' OR @COMBUSTIVEL='GASOLEO'
		INSERT INTO Scondutor.CARRO VALUES(@LAST,@DATETIME,@MARCA,@COR,@COMBUSTIVEL,@MATRICULA,@LUGARES,@DATAREGISTO,@MODELO,ENCRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'),CONVERT(VARCHAR,@DUA)))

	DECLARE @LASTC INT
	DECLARE @CAR_IDADE INT;
    SET @CAR_IDADE = DATEDIFF(YEAR, @DATAREGISTO, GETDATE());   

	SELECT @LASTC=(SELECT TOP 1 CAR_C_ID FROM Scondutor.CARRO ORDER BY CAR_C_ID DESC) ;
    
	IF @CAR_IDADE <= 8 AND @LUGARES=5 AND @COMBUSTIVEL = 'GASOLINA' OR @COMBUSTIVEL = 'GASOLEO'
		INSERT INTO CARROTIPO values(@LASTC,'Budget')

	ELSE IF @CAR_IDADE <= 4 AND @LUGARES >= 5 AND @COMBUSTIVEL = 'ELETRICO' 
		INSERT INTO CARROTIPO values(@LASTC,'green')

	ELSE IF @CAR_IDADE <= 4 AND @LUGARES = 5 OR @COMBUSTIVEL = 'GASOLINA' OR @COMBUSTIVEL = 'GASOLEO' OR @MARCA = 'BMW' OR @MARCA = 'AUDI' OR @MARCA = 'MERCEDES'
		INSERT INTO CARROTIPO values(@LASTC,'executive')

	ELSE IF @CAR_IDADE <= 8 AND @LUGARES > 5 AND @COMBUSTIVEL = 'GASOLINA' OR @COMBUSTIVEL = 'GASOLEO' 
		INSERT INTO CARROTIPO values(@LASTC,'XL')
	ELSE
		THROW 51001, 'ERRO: OS DADOS INSERIDOS NÃO CORRESPONDEM A NENHUMA CATEGORIA', 1;
END
GO
/*
EXEC SPREGISTARCARRO @MARCA='BMW',@COR='AZUL',@COMBUSTIVEL='GASOLEO',@MATRICULA='31TU31',@LUGARES=3,@DATAREGISTO='2021-01-01',@MODELO='SERIE',@DUA='123456'
*/
--LOGINS
GO
CREATE OR ALTER PROCEDURE SPLOGINCON
	@EMAIL VARCHAR(255),
	@PASSWORD VARCHAR(255)
	
AS 
BEGIN
	SELECT CO_SECRET AS token,CO_ID AS concode  FROM Sanalista.CONLOGIN 
	WHERE  CONVERT(VARCHAR(255),DECRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'), CO_EMAIL, N'PASS'))=@EMAIL AND 
	 CONVERT(VARCHAR(255),DECRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'), CO_PASSWORD, N'PASS'))=@PASSWORD
END
GO

CREATE OR ALTER PROCEDURE SPLOGINCL
	@EMAIL VARCHAR(255),
	@PASSWORD VARCHAR(255)
	
AS 
BEGIN
	SELECT CLO_SECRET AS token, CLO_ID AS clcode
	FROM Sanalista.CLLOGIN 
	WHERE CONVERT(VARCHAR(255),DECRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'), CLO_EMAIL, N'PASS'))=@EMAIL AND 
	CONVERT(VARCHAR(255),DECRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'), CLO_PASSWORD, N'PASS'))=@PASSWORD
END
GO

GO
CREATE OR ALTER PROCEDURE SPLOGINCONINFO
	@CONCODE INT 
	
AS 
BEGIN
	SELECT CON_NOME AS nome,CON_NOMEMEIO AS nomemeio,CON_APELIDO AS apelido,CON_GENERO AS genero
	FROM Scondutor.CONDUTOR C
	WHERE @CONCODE=CON_ID

END
GO

CREATE OR ALTER PROCEDURE SPLOGINCLINFO
	@clcode INT 
	
AS 
BEGIN
	SELECT CL_NOME AS nome,CL_NOMEMEIO AS nomemeio,CL_APELIDO AS apelido,CL_GENERO AS genero,CL_TELEMOVEL AS telemovel
	FROM Scliente.CLIENTE C
	WHERE @CLCODE=CL_ID

END
GO
--INFOS CL
CREATE OR ALTER PROCEDURE spPainelClinfo
	@CLINFO INT 
AS 
BEGIN
	SELECT COUNT(AVCON_CLID) AS Virealizada,EST_NOME AS estatuto,ROUND(AVG(CO.AVCL_ESTRELAS),2) AS mediaEstrelas,
	VIA_PNTRECOLHA AS pontorecolha,VIA_DATAHORAREC AS datahora,VIA_PNTDESTINO AS pontodestino
	FROM Scliente.CLIENTE CL
	INNER JOIN Scondutor.CLAVCOND CLAV ON CLAV.AVCON_CLID=CL.CL_ID
	INNER JOIN DETER DET ON DET.DETER_CL_ID=CL.CL_ID
	INNER JOIN ESTATUTO EST ON EST.EST_ID=DET_ID
	INNER JOIN Scliente.CONDAVCL CO ON CO.AVCL_CLID=CL.CL_ID
	INNER JOIN Sanalista.VIAGEM VI ON VI.VIA_ID=CO.AVCL_ID
	WHERE @CLINFO=AVCON_CLID
	GROUP  BY EST_NOME,VIA_PNTRECOLHA,AVCL_ESTRELAS,VIA_DATAHORAREC,VIA_PNTDESTINO
	

END

GO
CREATE OR ALTER PROCEDURE SPMETPAGAMENTO
	@CLINFO INT 
AS 
BEGIN
	SELECT MET_NUMCARTAO AS NUMERO,MET_CVV AS CVV,MET_ANO AS ANO,MET_MES AS MES FROM Scliente.CLIENTE CL
	INNER JOIN TER T ON T.TER_CLID=CL.CL_ID
	INNER JOIN METPAGAMENTO MET ON MET.MET_ID= T.TER_METID
	WHERE @CLINFO=CL_ID
END
GO

-- sp para inserir dummy data cliente
CREATE OR ALTER PROCEDURE SPinsertdummyCl

	@QTD INT
AS BEGIN

	DECLARE @ID INT
	DECLARE @DATA DATE

	SET @DATA=getdate() - ((18 * 365) + RAND()*(42*365))	
	set @ID=1
	WHILE @ID<=@QTD 
	BEGIN
		INSERT INTO Scliente.CLIENTE VALUES (@DATA,'nome','meio','apelido','M',FLOOR(RAND()*(999999999-100000000+1))+100000000);
		SET @ID=@ID+1
	END
END
/*
EXEC SPinsertdummyCl @QTD=1200
select * from DETER
*/
go
-- sp para inserir dummy data cllogin
CREATE OR ALTER PROCEDURE SPinsertdummyCllogin

@QTD INT
AS BEGIN

	DECLARE @ID INT

	SET @ID=1

	WHILE @ID<@QTD
	BEGIN
		INSERT INTO Sanalista.CLlogin VALUES (@ID,ENCRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'),CONVERT(VARCHAR,CONCAT('email',@ID,'GMAIL.COM'))),
									ENCRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'),CONVERT(VARCHAR,CONCAT('pass',@ID))),null,
									default);
		SET @ID=@ID+1
	END
END
go
/*
EXEC SPinsertdummyCllogin @QTD=50
select * from Sanalista.CLLOGIN
*/
go
-- sp para inserir dummy data condutor
CREATE OR ALTER PROCEDURE SPinsertdummyCon

@QTD INT
AS BEGIN

	DECLARE @ID INT
	DECLARE @DATA DATE

	SET @DATA=getdate() - ((18 * 365) + RAND()*(42*365))

	SELECT @ID=(SELECT TOP 1 Con_ID FROM Scondutor.CONDUTOR ORDER BY COn_ID DESC)

	WHILE @ID<@QTD
	begin
		INSERT INTO Scondutor.CONDUTOR VALUES (@DATA,'M',ENCRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'),CONVERT(VARCHAR,FLOOR(RAND()*(99999999-10000000+1))+10000000))
									,ENCRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'),CONVERT(VARCHAR,FLOOR(RAND()*(999999999-100000000+1))+100000000)),
									CONCAT('nome',@ID),CONCAT('nomemeio',@ID),CONCAT('apelido',@ID),FLOOR(RAND()*(999999999-100000000+1))+100000000,FLOOR(RAND()*(999999-100000+1))+100000);
									SET @ID=@ID+1
	end
END
go
/*
exec SPinsertdummyCon @qtd=50
*/
GO
-- sp para inserir dummy data conlogin
CREATE OR ALTER PROCEDURE SPinsertdummyConlogin

@QTD INT
AS BEGIN

	DECLARE @ID INT

	SET @ID=1

	WHILE @ID<@QTD
	BEGIN
		INSERT INTO Sanalista.CONLOGIN VALUES (@ID,ENCRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'),CONVERT(VARCHAR,CONCAT('email',@ID,'GMAIL.COM'))),
									ENCRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'),CONVERT(VARCHAR,CONCAT('pass',@ID))),null,
									default);
		SET @ID=@ID+1
	END
END
go
/*
EXEC SPinsertdummyConlogin @QTD=50
select * from Sanalista.CLLOGIN
*/
go
-- sp para inserir dummy data metPagamento
CREATE OR ALTER PROCEDURE SPinsertdummyMetPag

@QTD INT
AS BEGIN
	
	DECLARE @ID INT
	DECLARE @LAST INT
	DECLARE @LASTM INT
	DECLARE @DATE DATETIME
	SELECT @LAST=(SELECT TOP 1 MET_ID FROM METPAGAMENTO ORDER BY MET_ID DESC) ;
	SELECT @LASTM=(SELECT TOP 1 CL_ID FROM Scliente.CLIENTE ORDER BY CL_ID DESC) ;
	SET @DATE=GETDATE()
	set @ID=1

	WHILE @ID<@QTD
	begin
		INSERT INTO METPAGAMENTO VALUES (ENCRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'),CONVERT(VARCHAR,2028))
									,ENCRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'),CONVERT(VARCHAR,5)),
									ENCRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'),CONVERT(VARCHAR,FLOOR(RAND()*(999999999999999-100000000000000+1))+100000000000000)),
									ENCRYPTBYASYMKEY(ASYMKEY_ID('CHAVEASSIMETRICA1'),CONVERT(VARCHAR,FLOOR(RAND()*(999-100+1))+100)))
		INSERT INTO TER VALUES(@DATE,@LASTM,@LAST)
									SET @ID=@ID+1
	end
END
go
/*
exec SPinsertdummyMetPag @qtd=200
*/
go

CREATE OR ALTER PROCEDURE SPinsertdummyConlogin

@QTD INT
AS BEGIN

	DECLARE @ID INT
	DECLARE @LASTM INT
	DECLARE @DATE DATETIME
	SELECT @LASTM=(SELECT TOP 1 CL_ID FROM Scliente.CLIENTE ORDER BY CL_ID DESC) ;
	SET @DATE=GETDATE()
	SET @ID=1

	WHILE @ID<@QTD
	BEGIN
		INSERT INTO DETER VALUES (@DATE,@ID,1);
		SET @ID=@ID+1
	END
END
go
EXEC  SPinsertdummyConlogin @QTD=1200
