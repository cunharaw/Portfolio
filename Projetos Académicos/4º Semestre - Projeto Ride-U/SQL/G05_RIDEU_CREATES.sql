/************************************************************
    GRUPO: 05   |  CURSO: L-IG
*  	UC: ADMINISTRAÇÃO E GESTÃO DE INFORMAÇÃO
*
*	PROJETO: RIDE-U   
*
*  	NOME: JOÃO RAMOS(20200255)
*  	NOME: MARTIM BENTO (20200488)
    NOME: PEDRO CUNHA (20200908)
*
************************************************************/

/************************************************************
*  LISTA DE ENTIDADES INFORMACONAIS PRIMÁRIAS
************************************************************/
CREATE TABLE Scondutor.CONDUTOR (
	CON_ID INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
	CON_DATANASC DATE NOT NULL,
	CON_GENERO CHAR(1) NOT NULL,
	CON_CC VARBINARY(MAX)  NOT NULL,
	CON_NIF VARBINARY(MAX) NOT NULL,
	CON_NOME VARCHAR(20) NOT NULL,
	CON_NOMEMEIO VARCHAR(20) NOT NULL,
	CON_APELIDO VARCHAR(20) NOT NULL,
	CON_TELEMOVEL INT UNIQUE NOT NULL,
	CON_LICTRANSP VARBINARY(MAX) NOT NULL,
	CONSTRAINT CHK_CON_TEL CHECK (LEN(CON_TELEMOVEL) = 9),  --RI VERIFICAR COMPRIMENTO TELEFONE
	);

CREATE TABLE Scliente.CLIENTE (
	CL_ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	CL_DATANASC DATE NOT NULL,
	CL_NOME VARCHAR(20) NOT NULL,
	CL_NOMEMEIO VARCHAR(20) ,
	CL_APELIDO VARCHAR(20) NOT NULL,
	CL_GENERO CHAR(1) NOT NULL,
	CL_TELEMOVEL INT UNIQUE NOT NULL,
	CONSTRAINT CHK_CL_TEL CHECK (LEN(CL_TELEMOVEL) = 9)  --RI: VERIFICAR COMPRIMENTO TELEFONE
	);

CREATE TABLE CODPOSTAL(
	CP_ID INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
	CP_4D INT NOT NULL,
	CP_3D INT NOT NULL,
	CP_RUA VARCHAR(255) NOT NULL,
	CP_FREGUESIA VARCHAR(255) NOT NULL,
	CP_NUMPORTA INT NOT NULL DEFAULT(1),
	CP_PAIS VARCHAR(50) NOT NULL,
	CONSTRAINT CHK_CP_4D CHECK (LEN(CP_4D) = 4),
	CONSTRAINT CHK_CP_3D CHECK (LEN(CP_3D) = 3),
	CONSTRAINT CHK_CP_RUA CHECK (CP_RUA NOT LIKE '%[0-9]%'),
	CONSTRAINT CHK_CP_FREGUESIA CHECK (CP_FREGUESIA NOT LIKE '%[0-9]%'),
	CONSTRAINT CHK_CP_PAIS CHECK (CP_PAIS NOT LIKE '%[0-9]%')
);

CREATE TABLE ESTATUTO (
	EST_ID INT IDENTITY(1,1) PRIMARY KEY  NOT NULL,
	EST_NOME VARCHAR(6) NOT NULL DEFAULT 'BRONZE',
	EST_PRECO MONEY NOT NULL,
	CONSTRAINT CHK_EST_NOME CHECK (EST_NOME NOT LIKE '%[0-9]%')
	);

CREATE TABLE METPAGAMENTO(
	MET_ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	MET_ANO VARBINARY(MAX) NOT NULL,
	MET_MES VARBINARY(MAX) NOT NULL,
	MET_NUMCARTAO VARBINARY(MAX)  NOT NULL,
	MET_CVV VARBINARY(MAX) NOT NULL,
);

CREATE TABLE TAXASSISTEMA(
	TAX_ID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	TAX_TAXAAPP INT NOT NULL DEFAULT(25)
);

CREATE TABLE IMPOSTOS(
	IMP_ID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	IMP_IVA INT NOT NULL DEFAULT(23)
);

CREATE TABLE TARIFA(
	TAR_ID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	TAR_NOME VARCHAR(20),
	TAR_CUSTOKM MONEY NOT NULL DEFAULT(1),
	TAR_CUSTOMIN MONEY NOT NULL DEFAULT(0.09)
);
/************************************************************
*  LISTA DE ENTIDADES FRACAS
************************************************************/
CREATE TABLE Sanalista.CARTACONDUCAO(
	CC_ID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	CC_NUMERO VARBINARY(MAX)  NOT NULL,
	CC_DATAEMISSAO DATE NOT NULL,
	CC_CON_ID INT NOT NULL ,
	CC_CON_DATAHORA DATETIME NOT NULL,
	FOREIGN KEY(CC_CON_ID) REFERENCES Scondutor.CONDUTOR(CON_ID)
);

CREATE TABLE Sanalista.CLLOGIN(
	CLO_ID INT PRIMARY KEY IDENTITY(1,1),
	CLO_CL_ID INT UNIQUE NOT NULL,
	CLO_EMAIL VARBINARY(MAX) NOT NULL ,
	CLO_PASSWORD VARBINARY(MAX) NOT NULL ,
	CLO_SECRET VARCHAR(32),
	CLO_Ativo int default 1
	FOREIGN KEY(CLO_CL_ID) REFERENCES Scliente.CLIENTE(CL_ID)
);

CREATE TABLE Sanalista.CONLOGIN(
	CO_ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	CO_CON_ID INT UNIQUE NOT NULL,
	CO_EMAIL VARBINARY(MAX) NOT NULL,
	CO_PASSWORD VARBINARY(MAX) NOT NULL,
	CO_SECRET VARCHAR(32),
	CO_ATIVO INT DEFAULT 1
	FOREIGN KEY(CO_CON_ID) REFERENCES Scondutor.CONDUTOR(CON_ID)
);
/************************************************************
*  LISTA DE ENTIDADES INFORMACIONAIS COM FK
************************************************************/
CREATE TABLE Sanalista.FATURA(
	FAT_ID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	FAT_DATAHORA DATETIME NOT NULL,
	FAT_NIF INT NOT NULL,
	FAT_TAX_ID INT,
	FAT_IMP_ID INT,
	FOREIGN KEY(FAT_TAX_ID) REFERENCES TAXASSISTEMA(TAX_ID),
	FOREIGN KEY(FAT_IMP_ID) REFERENCES IMPOSTOS(IMP_ID),
	CONSTRAINT CHK_FAT_NIF CHECK (LEN(FAT_NIF) = 9)  --RI VERIFICAR COMPRIMENTO NIF
);

CREATE TABLE Scondutor.CARRO (
	CAR_ID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	CAR_C_ID INT UNIQUE NOT NULL,
	CAR_C_DATE DATETIME NOT NULL,
	CAR_MARCA VARCHAR(20) NOT NULL,
	CAR_COR VARCHAR(20) NOT NULL,
	CAR_COMBUSTIVEL VARCHAR(10) NOT NULL,
	CAR_MATRICULA VARCHAR(6) NOT NULL,
	CAR_LUGARES INT NOT NULL,
	CAR_DATAREG DATE NOT NULL,
	CAR_MODELO VARCHAR(15) NOT NULL,
	CAR_DUA VARBINARY(MAX) NOT NULL,
	FOREIGN KEY(CAR_C_ID) REFERENCES Scondutor.CONDUTOR(CON_ID)
);

CREATE TABLE CARROTIPO(
	CARTIP_ID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	CARTIP_CAR_ID INT NOT NULL,
	CARTIP_NOME VARCHAR(9) NOT NULL
	FOREIGN KEY(CARTIP_CAR_ID) REFERENCES Scondutor.CARRO(CAR_ID)
);

/************************************************************
*  LISTA DE ENTIDADES DE ASSOCIAÇÃO
************************************************************/			
CREATE TABLE Sanalista.VIAGEM (
	VIA_ID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	VIA_PNTRECOLHA VARCHAR(100) NOT NULL,
	VIA_PNTDESTINO VARCHAR(100) NOT NULL,
	VIA_DATAHORAREC DATETIME NOT NULL,
	VIA_DATAHORADST DATETIME NOT NULL,
	VIA_CODUNICO INT UNIQUE NOT NULL,
	CONSTRAINT CHK_CODIGO CHECK (LEN(VIA_CODUNICO) = 6)
	);

CREATE TABLE Scondutor.CLAVCOND(
	AVCON_ID INT PRIMARY KEY  IDENTITY(1,1) NOT NULL,
	AVCON_DATAHORA DATETIME NOT NULL,
	AVCON_ESTRELAS INT NOT NULL,
	AVCON_CLID INT NOT NULL,
	AVCON_CONID INT NOT NULL,
	AVCON_VIID INT NOT NULL,	
	FOREIGN KEY(AVCON_CONID) REFERENCES Scondutor.CONDUTOR(CON_ID),
	FOREIGN KEY(AVCON_CLID) REFERENCES Scliente.CLIENTE(CL_ID),
	FOREIGN KEY(AVCON_VIID) REFERENCES Sanalista.VIAGEM(VIA_ID),
	CONSTRAINT CHK_AVCON_ESTRELAS CHECK (AVCON_ESTRELAS BETWEEN 0 AND 5)
);

CREATE TABLE Scliente.CONDAVCL(
	AVCL_ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	AVCL_DATAHORA DATETIME NOT NULL,
	AVCL_ESTRELAS INT NOT NULL,
	AVCL_CONID INT NOT NULL,
	AVCL_CLID INT NOT NULL,
	AVCL_VIID INT NOT NULL,
	FOREIGN KEY(AVCL_CONID) REFERENCES Scondutor.CONDUTOR(CON_ID),
	FOREIGN KEY(AVCL_CLID) REFERENCES Scliente.CLIENTE(CL_ID),
	FOREIGN KEY(AVCL_VIID) REFERENCES Sanalista.VIAGEM(VIA_ID),
	CONSTRAINT CHK_AVCL_ESTRELAS CHECK (AVCL_ESTRELAS BETWEEN 0 AND 5)
);

CREATE TABLE ABRANGER(
	ABRANGER_ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	ABRANGER_CP_REC_ID INT NOT NULL,
	ABRANGER_CP_DEST_ID INT NOT NULL,
	ABRANGER_VIAID INT NOT NULL,
	FOREIGN KEY(ABRANGER_CP_REC_ID) REFERENCES CODPOSTAL(CP_ID),
	FOREIGN KEY(ABRANGER_CP_DEST_ID) REFERENCES CODPOSTAL(CP_ID),
	FOREIGN KEY(ABRANGER_VIAID) REFERENCES Sanalista.VIAGEM(VIA_ID),
);

CREATE TABLE CONTER(
	CONTER_VIA_ID INT NOT NULL,
	CONTER_TAR_ID INT NOT NULL,
	FOREIGN KEY(CONTER_VIA_ID) REFERENCES Sanalista.VIAGEM(VIA_ID),
	FOREIGN KEY(CONTER_TAR_ID) REFERENCES TARIFA(TAR_ID),
	PRIMARY KEY(CONTER_VIA_ID ,CONTER_TAR_ID)
);

CREATE TABLE GERAR(
	GER_ID INT PRIMARY KEY NOT NULL IDENTITY(1,1),
	GER_DATAHORA DATETIME NOT NULL,
	GER_FATID INT NOT NULL,
	GER_VIAID INT NOT NULL,
	FOREIGN KEY(GER_FATID) REFERENCES Sanalista.FATURA(FAT_ID),
	FOREIGN KEY(GER_VIAID) REFERENCES Sanalista.VIAGEM(VIA_ID)
);

CREATE TABLE PAGAR(
	PAG_ID INT NOT NULL IDENTITY(1,1),
	PAG_DATAHORA DATETIME NOT NULL,
	PAGAR_METID INT NOT NULL,
	PAGAR_FATID INT NOT NULL,
	FOREIGN KEY(PAGAR_METID) REFERENCES METPAGAMENTO(MET_ID),
	FOREIGN KEY(PAGAR_FATID) REFERENCES Sanalista.FATURA(FAT_ID)
);

CREATE TABLE DETER(
	DET_ID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	DET_DATAHORA DATETIME NOT NULL,
	DETER_CL_ID INT NOT NULL UNIQUE,
	DETER_EST_ID INT NOT NULL,
	FOREIGN KEY(DETER_EST_ID) REFERENCES ESTATUTO(EST_ID),
	FOREIGN KEY(DETER_CL_ID) REFERENCES Scliente.CLIENTE(CL_ID),
);

CREATE TABLE TER(
	TER_ID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	TER_DATAHORA DATETIME NOT NULL,
	TER_CLID INT NOT NULL,
	TER_METID INT NOT NULL,
	FOREIGN KEY(TER_METID) REFERENCES METPAGAMENTO(MET_ID),
	FOREIGN KEY(TER_CLID) REFERENCES Scliente.CLIENTE(CL_ID)
);

CREATE TABLE OBTER(
	OBT_ID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	OBT_DATAHORA DATETIME NOT NULL,
	OBT_QUANTIA MONEY NOT NULL,
	OBT_FATID INT NOT NULL,
	OBT_ESTID INT NOT NULL,
	FOREIGN KEY(OBT_FATID) REFERENCES Sanalista.FATURA(FAT_ID),
	FOREIGN KEY(OBT_ESTID) REFERENCES ESTATUTO(EST_ID)
);